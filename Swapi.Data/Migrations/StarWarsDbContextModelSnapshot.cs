// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Swapi.Data;

#nullable disable

namespace Swapi.Data.Migrations
{
    [DbContext(typeof(StarWarsDbContext))]
    partial class StarWarsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Swapi.Data.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Episode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OpeningCrawl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Producer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReleaseDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Director = "George Lucas",
                            Episode = 4,
                            OpeningCrawl = "It is a period of civil war...",
                            Producer = "Gary Kurtz, Rick McCallum",
                            ReleaseDate = "1977-05-25",
                            Title = "A New Hope"
                        },
                        new
                        {
                            Id = 2,
                            Director = "Irvin Kershner",
                            Episode = 5,
                            OpeningCrawl = "It is a dark time for the Rebellion...",
                            Producer = "Gary Kurtz, Rick McCallum",
                            ReleaseDate = "1980-05-21",
                            Title = "The Empire Strikes Back"
                        });
                });

            modelBuilder.Entity("Swapi.Data.FilmPlanet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FilmId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlanetId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.HasIndex("PlanetId");

                    b.ToTable("FilmPlanet");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FilmId = 1,
                            PlanetId = 1
                        },
                        new
                        {
                            Id = 2,
                            FilmId = 2,
                            PlanetId = 2
                        });
                });

            modelBuilder.Entity("Swapi.Data.FilmStarship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FilmId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StarshipId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.HasIndex("StarshipId");

                    b.ToTable("FilmStarship");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FilmId = 1,
                            StarshipId = 1
                        },
                        new
                        {
                            Id = 2,
                            FilmId = 2,
                            StarshipId = 2
                        });
                });

            modelBuilder.Entity("Swapi.Data.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BirthYear")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EyeColor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HairColor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("HomeWorldId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mass")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SkinColor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HomeWorldId");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthYear = "19BBY",
                            EyeColor = "Blue",
                            Gender = "Male",
                            HairColor = "Blond",
                            Height = "172",
                            Mass = "77",
                            Name = "Luke Skywalker",
                            SkinColor = "Fair"
                        },
                        new
                        {
                            Id = 2,
                            BirthYear = "19BBY",
                            EyeColor = "Brown",
                            Gender = "Female",
                            HairColor = "Brown",
                            Height = "150",
                            Mass = "49",
                            Name = "Leia Organa",
                            SkinColor = "Light"
                        });
                });

            modelBuilder.Entity("Swapi.Data.PersonFilm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FilmId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonFilm");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FilmId = 1,
                            PersonId = 1
                        },
                        new
                        {
                            Id = 2,
                            FilmId = 2,
                            PersonId = 1
                        },
                        new
                        {
                            Id = 3,
                            FilmId = 1,
                            PersonId = 2
                        });
                });

            modelBuilder.Entity("Swapi.Data.PersonPlanet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlanetId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlanetId");

                    b.ToTable("PersonPlanet");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PersonId = 1,
                            PlanetId = 1
                        },
                        new
                        {
                            Id = 2,
                            PersonId = 2,
                            PlanetId = 1
                        });
                });

            modelBuilder.Entity("Swapi.Data.Planet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Climate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Diameter")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Gravity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OrbitalPeriod")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Population")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RotationSpeed")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SurfaceWater")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Terrain")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Planets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Climate = "Arid",
                            Diameter = "10465",
                            Gravity = "1 standard",
                            Name = "Tatooine",
                            OrbitalPeriod = "304",
                            Population = "200000",
                            RotationSpeed = "23",
                            SurfaceWater = "1",
                            Terrain = "Desert"
                        },
                        new
                        {
                            Id = 2,
                            Climate = "Frozen",
                            Diameter = "7200",
                            Gravity = "1.1 standard",
                            Name = "Hoth",
                            OrbitalPeriod = "549",
                            Population = "unknown",
                            RotationSpeed = "23",
                            SurfaceWater = "100",
                            Terrain = "Tundra, Ice caves, Mountain ranges"
                        });
                });

            modelBuilder.Entity("Swapi.Data.Starship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CargoCapacity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Consumables")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CostInCredits")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Crew")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HyperDriveRating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Length")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MaxAtmospheringSpeed")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Megalights")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Passengers")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StarshipClass")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Starships");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CargoCapacity = "110",
                            Consumables = "1 week",
                            CostInCredits = "149999",
                            Crew = "1",
                            HyperDriveRating = "1.0",
                            Length = "12.5",
                            Manufacturer = "Incom Corporation, Koensayr Manufacturing",
                            MaxAtmospheringSpeed = "1050",
                            Megalights = "100",
                            Model = "T-65 X-wing",
                            Name = "X-wing Starfighter",
                            Passengers = "0",
                            StarshipClass = "Starfighter"
                        },
                        new
                        {
                            Id = 2,
                            CargoCapacity = "3000000",
                            Consumables = "1 year",
                            CostInCredits = "3500000",
                            Crew = "30-165",
                            HyperDriveRating = "2.0",
                            Length = "150",
                            Manufacturer = "Corellian Engineering Corporation",
                            MaxAtmospheringSpeed = "950",
                            Megalights = "60",
                            Model = "CR90 corvette",
                            Name = "CR90 corvette",
                            Passengers = "600",
                            StarshipClass = "Corvette"
                        });
                });

            modelBuilder.Entity("Swapi.Data.FilmPlanet", b =>
                {
                    b.HasOne("Swapi.Data.Film", null)
                        .WithMany("Planets")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Swapi.Data.Planet", null)
                        .WithMany("Films")
                        .HasForeignKey("PlanetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Swapi.Data.FilmStarship", b =>
                {
                    b.HasOne("Swapi.Data.Film", null)
                        .WithMany("Starships")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Swapi.Data.Starship", null)
                        .WithMany("Films")
                        .HasForeignKey("StarshipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Swapi.Data.Person", b =>
                {
                    b.HasOne("Swapi.Data.Planet", "HomeWorld")
                        .WithMany()
                        .HasForeignKey("HomeWorldId");

                    b.Navigation("HomeWorld");
                });

            modelBuilder.Entity("Swapi.Data.PersonFilm", b =>
                {
                    b.HasOne("Swapi.Data.Film", null)
                        .WithMany("Persons")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Swapi.Data.Person", null)
                        .WithMany("Films")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Swapi.Data.PersonPlanet", b =>
                {
                    b.HasOne("Swapi.Data.Planet", null)
                        .WithMany("People")
                        .HasForeignKey("PlanetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Swapi.Data.Film", b =>
                {
                    b.Navigation("Persons");

                    b.Navigation("Planets");

                    b.Navigation("Starships");
                });

            modelBuilder.Entity("Swapi.Data.Person", b =>
                {
                    b.Navigation("Films");
                });

            modelBuilder.Entity("Swapi.Data.Planet", b =>
                {
                    b.Navigation("Films");

                    b.Navigation("People");
                });

            modelBuilder.Entity("Swapi.Data.Starship", b =>
                {
                    b.Navigation("Films");
                });
#pragma warning restore 612, 618
        }
    }
}
